from aiogram import F, Router
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext

import kb
import DataBase
from states import InputUserData

router = Router()

@router.message(Command("start"))
async def start(message: Message):
    username = message.from_user.username

    if message.from_user.username == None:
        username = "–ù–µ–∑–Ω–∞–∫–æ–º–µ—Ü"

    await message.answer(f"–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, *{username}*! –Ø –ú–ò–†–≠–ê–ë–æ—Ç —Å —Ä–∞–∑–Ω—ã–º–∏ –ø—Ä–∏–∫–∞–ª—é—Ö–∞–º–∏. –≠—Ç–æ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.", reply_markup=kb.menu)

@router.callback_query(F.data == "delivery")
async def delivery(clbck: CallbackQuery):
    await clbck.message.edit_text("–≠—Ç–æ —Ä–∞–∑–¥–µ–ª –¥–æ—Å—Ç–∞–≤–∫–∏. –í—ã–±–µ—Ä–∏ —Å–≤–æ—é —Ä–æ–ª—å:", reply_markup=kb.order_menu_kb)

@router.callback_query(F.data == "courier")
async  def courier(clbck: CallbackQuery):
    await clbck.message.edit_text("–í–æ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤ (–≤—ã–±–µ—Ä–∏ –∑–∞–∫–∞–∑ –∏ –Ω–∞–∂–º–∏ –Ω–∞ –Ω–µ–≥–æ):", reply_markup=kb.orders.as_markup())


@router.callback_query(F.data == "client")
async def client(clbck: CallbackQuery, state: FSMContext):
    if DataBase.check_order_client(clbck.message):
        await state.set_state(InputUserData.order_state)
        await clbck.message.edit_text("–ù–∞–ø–∏—à–∏—Ç–µ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞–∫–∞–∑–∞—Ç—å (–≤–æ–¥–∞, –µ–¥–∞), —Ü–µ–Ω—É:")

    else:
        await clbck.message.edit_text("–í–∞—à –∑–∞–∫–∞–∑: \n" + DataBase.edit_order_client(clbck.message), reply_markup=kb.create_order_kb + "\n –≤—ã –º–æ–∂–µ—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–ª–∏ —É–¥–∞–ª–∏—Ç—å –∑–∞–∫–∞–∑")

@router.message(InputUserData.order_state)
async def input_order(message: Message, state: FSMContext):
    await state.update_data(order_state=message.text)
    await message.answer(DataBase.add_client_delivery(message), reply_markup=kb.create_order_kb)


@router.callback_query(F.data == "backmenu")
async def back(clbck: CallbackQuery):
    await clbck.message.edit_text("üìå                   –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é                  üìå", reply_markup=kb.menu)

